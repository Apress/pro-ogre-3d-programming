# Makefile.in generated by automake 1.9.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

SOURCES = $(LightwaveConverter_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = LightwaveConverter$(EXEEXT)
subdir = Tools/LightwaveConverter/src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/Scripts/m4/cppunit.m4 \
	$(top_srcdir)/Scripts/m4/sdl.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/OgreMain/include/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_LightwaveConverter_OBJECTS = LightwaveConverter-BitArray.$(OBJEXT) \
	LightwaveConverter-lwEnvelope.$(OBJEXT) \
	LightwaveConverter-lwLayer.$(OBJEXT) \
	LightwaveConverter-lwo2mesh.$(OBJEXT) \
	LightwaveConverter-lwPolygon.$(OBJEXT) \
	LightwaveConverter-lwReader.$(OBJEXT) \
	LightwaveConverter-main.$(OBJEXT) \
	LightwaveConverter-Vector3.$(OBJEXT)
LightwaveConverter_OBJECTS = $(am_LightwaveConverter_OBJECTS)
LightwaveConverter_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/OgreMain/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(LightwaveConverter_SOURCES)
DIST_SOURCES = $(LightwaveConverter_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_CGPLUGIN_FALSE = @BUILD_CGPLUGIN_FALSE@
BUILD_CGPLUGIN_TRUE = @BUILD_CGPLUGIN_TRUE@
BUILD_DX9RENDERSYSTEM_FALSE = @BUILD_DX9RENDERSYSTEM_FALSE@
BUILD_DX9RENDERSYSTEM_TRUE = @BUILD_DX9RENDERSYSTEM_TRUE@
BUILD_EXRPLUGIN_FALSE = @BUILD_EXRPLUGIN_FALSE@
BUILD_EXRPLUGIN_TRUE = @BUILD_EXRPLUGIN_TRUE@
BUILD_UNIT_TESTS_FALSE = @BUILD_UNIT_TESTS_FALSE@
BUILD_UNIT_TESTS_TRUE = @BUILD_UNIT_TESTS_TRUE@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CEGUI_CFLAGS = @CEGUI_CFLAGS@
CEGUI_LIBS = @CEGUI_LIBS@
CFGTK_DEPS_CFLAGS = @CFGTK_DEPS_CFLAGS@
CFGTK_DEPS_LIBS = @CFGTK_DEPS_LIBS@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CPPUNIT_CFLAGS = @CPPUNIT_CFLAGS@
CPPUNIT_CONFIG = @CPPUNIT_CONFIG@
CPPUNIT_LIBS = @CPPUNIT_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FT2_CFLAGS = @FT2_CFLAGS@
FT2_CONFIG = @FT2_CONFIG@
FT2_LIBS = @FT2_LIBS@
GLSUPPORT_CFLAGS = @GLSUPPORT_CFLAGS@
GLSUPPORT_LIBS = @GLSUPPORT_LIBS@
GL_LIBS = @GL_LIBS@
HAVE_CEGUI_FALSE = @HAVE_CEGUI_FALSE@
HAVE_CEGUI_TRUE = @HAVE_CEGUI_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
OGREMAIN_VERSION_INFO = @OGREMAIN_VERSION_INFO@
OGRE_CFGTK = @OGRE_CFGTK@
OGRE_CFLAGS = @OGRE_CFLAGS@
OGRE_GLSUPPORT = @OGRE_GLSUPPORT@
OGRE_LINUX_FALSE = @OGRE_LINUX_FALSE@
OGRE_LINUX_TRUE = @OGRE_LINUX_TRUE@
OGRE_NT_FALSE = @OGRE_NT_FALSE@
OGRE_NT_TRUE = @OGRE_NT_TRUE@
OGRE_OSX_FALSE = @OGRE_OSX_FALSE@
OGRE_OSX_TRUE = @OGRE_OSX_TRUE@
OGRE_PLATFORM = @OGRE_PLATFORM@
OGRE_THREAD_LIBS = @OGRE_THREAD_LIBS@
OPENEXR_CFLAGS = @OPENEXR_CFLAGS@
OPENEXR_LIBS = @OPENEXR_LIBS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PLATFORM_CFLAGS = @PLATFORM_CFLAGS@
PLATFORM_LIBS = @PLATFORM_LIBS@
PLUGIN_FLAGS = @PLUGIN_FLAGS@
RANLIB = @RANLIB@
RC = @RC@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_CONFIG = @SDL_CONFIG@
SDL_LIBS = @SDL_LIBS@
SET_MAKE = @SET_MAKE@
SHARED_FLAGS = @SHARED_FLAGS@
SHELL = @SHELL@
STLPORT_CFLAGS = @STLPORT_CFLAGS@
STLPORT_LIBS = @STLPORT_LIBS@
STRIP = @STRIP@
USE_DEVIL_FALSE = @USE_DEVIL_FALSE@
USE_DEVIL_TRUE = @USE_DEVIL_TRUE@
VERSION = @VERSION@
YACC = @YACC@
ZZIPLIB_CFLAGS = @ZZIPLIB_CFLAGS@
ZZIPLIB_LIBS = @ZZIPLIB_LIBS@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_RC = @ac_ct_RC@
ac_ct_STRIP = @ac_ct_STRIP@
ac_pt_PKG_CONFIG = @ac_pt_PKG_CONFIG@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
INCLUDES = -I$(top_srcdir)/OgreMain/include -I$(top_srcdir)/Tools/LightwaveConverter/include
LightwaveConverter_CXXFLAGS = 
LightwaveConverter_SOURCES = BitArray.cpp \
							lwEnvelope.cpp \
							lwLayer.cpp \
							lwo2mesh.cpp \
							lwPolygon.cpp \
							lwReader.cpp \
							main.cpp \
							Vector3.cpp

LightwaveConverter_LDFLAGS = -L$(top_builddir)/OgreMain/src
LightwaveConverter_LDADD = -lOgreMain
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Tools/LightwaveConverter/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  Tools/LightwaveConverter/src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
LightwaveConverter$(EXEEXT): $(LightwaveConverter_OBJECTS) $(LightwaveConverter_DEPENDENCIES) 
	@rm -f LightwaveConverter$(EXEEXT)
	$(CXXLINK) $(LightwaveConverter_LDFLAGS) $(LightwaveConverter_OBJECTS) $(LightwaveConverter_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LightwaveConverter-BitArray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LightwaveConverter-Vector3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LightwaveConverter-lwEnvelope.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LightwaveConverter-lwLayer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LightwaveConverter-lwPolygon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LightwaveConverter-lwReader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LightwaveConverter-lwo2mesh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LightwaveConverter-main.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

LightwaveConverter-BitArray.o: BitArray.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -MT LightwaveConverter-BitArray.o -MD -MP -MF "$(DEPDIR)/LightwaveConverter-BitArray.Tpo" -c -o LightwaveConverter-BitArray.o `test -f 'BitArray.cpp' || echo '$(srcdir)/'`BitArray.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LightwaveConverter-BitArray.Tpo" "$(DEPDIR)/LightwaveConverter-BitArray.Po"; else rm -f "$(DEPDIR)/LightwaveConverter-BitArray.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BitArray.cpp' object='LightwaveConverter-BitArray.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -c -o LightwaveConverter-BitArray.o `test -f 'BitArray.cpp' || echo '$(srcdir)/'`BitArray.cpp

LightwaveConverter-BitArray.obj: BitArray.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -MT LightwaveConverter-BitArray.obj -MD -MP -MF "$(DEPDIR)/LightwaveConverter-BitArray.Tpo" -c -o LightwaveConverter-BitArray.obj `if test -f 'BitArray.cpp'; then $(CYGPATH_W) 'BitArray.cpp'; else $(CYGPATH_W) '$(srcdir)/BitArray.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LightwaveConverter-BitArray.Tpo" "$(DEPDIR)/LightwaveConverter-BitArray.Po"; else rm -f "$(DEPDIR)/LightwaveConverter-BitArray.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BitArray.cpp' object='LightwaveConverter-BitArray.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -c -o LightwaveConverter-BitArray.obj `if test -f 'BitArray.cpp'; then $(CYGPATH_W) 'BitArray.cpp'; else $(CYGPATH_W) '$(srcdir)/BitArray.cpp'; fi`

LightwaveConverter-lwEnvelope.o: lwEnvelope.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -MT LightwaveConverter-lwEnvelope.o -MD -MP -MF "$(DEPDIR)/LightwaveConverter-lwEnvelope.Tpo" -c -o LightwaveConverter-lwEnvelope.o `test -f 'lwEnvelope.cpp' || echo '$(srcdir)/'`lwEnvelope.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LightwaveConverter-lwEnvelope.Tpo" "$(DEPDIR)/LightwaveConverter-lwEnvelope.Po"; else rm -f "$(DEPDIR)/LightwaveConverter-lwEnvelope.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lwEnvelope.cpp' object='LightwaveConverter-lwEnvelope.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -c -o LightwaveConverter-lwEnvelope.o `test -f 'lwEnvelope.cpp' || echo '$(srcdir)/'`lwEnvelope.cpp

LightwaveConverter-lwEnvelope.obj: lwEnvelope.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -MT LightwaveConverter-lwEnvelope.obj -MD -MP -MF "$(DEPDIR)/LightwaveConverter-lwEnvelope.Tpo" -c -o LightwaveConverter-lwEnvelope.obj `if test -f 'lwEnvelope.cpp'; then $(CYGPATH_W) 'lwEnvelope.cpp'; else $(CYGPATH_W) '$(srcdir)/lwEnvelope.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LightwaveConverter-lwEnvelope.Tpo" "$(DEPDIR)/LightwaveConverter-lwEnvelope.Po"; else rm -f "$(DEPDIR)/LightwaveConverter-lwEnvelope.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lwEnvelope.cpp' object='LightwaveConverter-lwEnvelope.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -c -o LightwaveConverter-lwEnvelope.obj `if test -f 'lwEnvelope.cpp'; then $(CYGPATH_W) 'lwEnvelope.cpp'; else $(CYGPATH_W) '$(srcdir)/lwEnvelope.cpp'; fi`

LightwaveConverter-lwLayer.o: lwLayer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -MT LightwaveConverter-lwLayer.o -MD -MP -MF "$(DEPDIR)/LightwaveConverter-lwLayer.Tpo" -c -o LightwaveConverter-lwLayer.o `test -f 'lwLayer.cpp' || echo '$(srcdir)/'`lwLayer.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LightwaveConverter-lwLayer.Tpo" "$(DEPDIR)/LightwaveConverter-lwLayer.Po"; else rm -f "$(DEPDIR)/LightwaveConverter-lwLayer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lwLayer.cpp' object='LightwaveConverter-lwLayer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -c -o LightwaveConverter-lwLayer.o `test -f 'lwLayer.cpp' || echo '$(srcdir)/'`lwLayer.cpp

LightwaveConverter-lwLayer.obj: lwLayer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -MT LightwaveConverter-lwLayer.obj -MD -MP -MF "$(DEPDIR)/LightwaveConverter-lwLayer.Tpo" -c -o LightwaveConverter-lwLayer.obj `if test -f 'lwLayer.cpp'; then $(CYGPATH_W) 'lwLayer.cpp'; else $(CYGPATH_W) '$(srcdir)/lwLayer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LightwaveConverter-lwLayer.Tpo" "$(DEPDIR)/LightwaveConverter-lwLayer.Po"; else rm -f "$(DEPDIR)/LightwaveConverter-lwLayer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lwLayer.cpp' object='LightwaveConverter-lwLayer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -c -o LightwaveConverter-lwLayer.obj `if test -f 'lwLayer.cpp'; then $(CYGPATH_W) 'lwLayer.cpp'; else $(CYGPATH_W) '$(srcdir)/lwLayer.cpp'; fi`

LightwaveConverter-lwo2mesh.o: lwo2mesh.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -MT LightwaveConverter-lwo2mesh.o -MD -MP -MF "$(DEPDIR)/LightwaveConverter-lwo2mesh.Tpo" -c -o LightwaveConverter-lwo2mesh.o `test -f 'lwo2mesh.cpp' || echo '$(srcdir)/'`lwo2mesh.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LightwaveConverter-lwo2mesh.Tpo" "$(DEPDIR)/LightwaveConverter-lwo2mesh.Po"; else rm -f "$(DEPDIR)/LightwaveConverter-lwo2mesh.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lwo2mesh.cpp' object='LightwaveConverter-lwo2mesh.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -c -o LightwaveConverter-lwo2mesh.o `test -f 'lwo2mesh.cpp' || echo '$(srcdir)/'`lwo2mesh.cpp

LightwaveConverter-lwo2mesh.obj: lwo2mesh.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -MT LightwaveConverter-lwo2mesh.obj -MD -MP -MF "$(DEPDIR)/LightwaveConverter-lwo2mesh.Tpo" -c -o LightwaveConverter-lwo2mesh.obj `if test -f 'lwo2mesh.cpp'; then $(CYGPATH_W) 'lwo2mesh.cpp'; else $(CYGPATH_W) '$(srcdir)/lwo2mesh.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LightwaveConverter-lwo2mesh.Tpo" "$(DEPDIR)/LightwaveConverter-lwo2mesh.Po"; else rm -f "$(DEPDIR)/LightwaveConverter-lwo2mesh.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lwo2mesh.cpp' object='LightwaveConverter-lwo2mesh.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -c -o LightwaveConverter-lwo2mesh.obj `if test -f 'lwo2mesh.cpp'; then $(CYGPATH_W) 'lwo2mesh.cpp'; else $(CYGPATH_W) '$(srcdir)/lwo2mesh.cpp'; fi`

LightwaveConverter-lwPolygon.o: lwPolygon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -MT LightwaveConverter-lwPolygon.o -MD -MP -MF "$(DEPDIR)/LightwaveConverter-lwPolygon.Tpo" -c -o LightwaveConverter-lwPolygon.o `test -f 'lwPolygon.cpp' || echo '$(srcdir)/'`lwPolygon.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LightwaveConverter-lwPolygon.Tpo" "$(DEPDIR)/LightwaveConverter-lwPolygon.Po"; else rm -f "$(DEPDIR)/LightwaveConverter-lwPolygon.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lwPolygon.cpp' object='LightwaveConverter-lwPolygon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -c -o LightwaveConverter-lwPolygon.o `test -f 'lwPolygon.cpp' || echo '$(srcdir)/'`lwPolygon.cpp

LightwaveConverter-lwPolygon.obj: lwPolygon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -MT LightwaveConverter-lwPolygon.obj -MD -MP -MF "$(DEPDIR)/LightwaveConverter-lwPolygon.Tpo" -c -o LightwaveConverter-lwPolygon.obj `if test -f 'lwPolygon.cpp'; then $(CYGPATH_W) 'lwPolygon.cpp'; else $(CYGPATH_W) '$(srcdir)/lwPolygon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LightwaveConverter-lwPolygon.Tpo" "$(DEPDIR)/LightwaveConverter-lwPolygon.Po"; else rm -f "$(DEPDIR)/LightwaveConverter-lwPolygon.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lwPolygon.cpp' object='LightwaveConverter-lwPolygon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -c -o LightwaveConverter-lwPolygon.obj `if test -f 'lwPolygon.cpp'; then $(CYGPATH_W) 'lwPolygon.cpp'; else $(CYGPATH_W) '$(srcdir)/lwPolygon.cpp'; fi`

LightwaveConverter-lwReader.o: lwReader.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -MT LightwaveConverter-lwReader.o -MD -MP -MF "$(DEPDIR)/LightwaveConverter-lwReader.Tpo" -c -o LightwaveConverter-lwReader.o `test -f 'lwReader.cpp' || echo '$(srcdir)/'`lwReader.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LightwaveConverter-lwReader.Tpo" "$(DEPDIR)/LightwaveConverter-lwReader.Po"; else rm -f "$(DEPDIR)/LightwaveConverter-lwReader.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lwReader.cpp' object='LightwaveConverter-lwReader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -c -o LightwaveConverter-lwReader.o `test -f 'lwReader.cpp' || echo '$(srcdir)/'`lwReader.cpp

LightwaveConverter-lwReader.obj: lwReader.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -MT LightwaveConverter-lwReader.obj -MD -MP -MF "$(DEPDIR)/LightwaveConverter-lwReader.Tpo" -c -o LightwaveConverter-lwReader.obj `if test -f 'lwReader.cpp'; then $(CYGPATH_W) 'lwReader.cpp'; else $(CYGPATH_W) '$(srcdir)/lwReader.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LightwaveConverter-lwReader.Tpo" "$(DEPDIR)/LightwaveConverter-lwReader.Po"; else rm -f "$(DEPDIR)/LightwaveConverter-lwReader.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lwReader.cpp' object='LightwaveConverter-lwReader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -c -o LightwaveConverter-lwReader.obj `if test -f 'lwReader.cpp'; then $(CYGPATH_W) 'lwReader.cpp'; else $(CYGPATH_W) '$(srcdir)/lwReader.cpp'; fi`

LightwaveConverter-main.o: main.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -MT LightwaveConverter-main.o -MD -MP -MF "$(DEPDIR)/LightwaveConverter-main.Tpo" -c -o LightwaveConverter-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LightwaveConverter-main.Tpo" "$(DEPDIR)/LightwaveConverter-main.Po"; else rm -f "$(DEPDIR)/LightwaveConverter-main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main.cpp' object='LightwaveConverter-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -c -o LightwaveConverter-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

LightwaveConverter-main.obj: main.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -MT LightwaveConverter-main.obj -MD -MP -MF "$(DEPDIR)/LightwaveConverter-main.Tpo" -c -o LightwaveConverter-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LightwaveConverter-main.Tpo" "$(DEPDIR)/LightwaveConverter-main.Po"; else rm -f "$(DEPDIR)/LightwaveConverter-main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main.cpp' object='LightwaveConverter-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -c -o LightwaveConverter-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

LightwaveConverter-Vector3.o: Vector3.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -MT LightwaveConverter-Vector3.o -MD -MP -MF "$(DEPDIR)/LightwaveConverter-Vector3.Tpo" -c -o LightwaveConverter-Vector3.o `test -f 'Vector3.cpp' || echo '$(srcdir)/'`Vector3.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LightwaveConverter-Vector3.Tpo" "$(DEPDIR)/LightwaveConverter-Vector3.Po"; else rm -f "$(DEPDIR)/LightwaveConverter-Vector3.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Vector3.cpp' object='LightwaveConverter-Vector3.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -c -o LightwaveConverter-Vector3.o `test -f 'Vector3.cpp' || echo '$(srcdir)/'`Vector3.cpp

LightwaveConverter-Vector3.obj: Vector3.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -MT LightwaveConverter-Vector3.obj -MD -MP -MF "$(DEPDIR)/LightwaveConverter-Vector3.Tpo" -c -o LightwaveConverter-Vector3.obj `if test -f 'Vector3.cpp'; then $(CYGPATH_W) 'Vector3.cpp'; else $(CYGPATH_W) '$(srcdir)/Vector3.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LightwaveConverter-Vector3.Tpo" "$(DEPDIR)/LightwaveConverter-Vector3.Po"; else rm -f "$(DEPDIR)/LightwaveConverter-Vector3.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Vector3.cpp' object='LightwaveConverter-Vector3.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LightwaveConverter_CXXFLAGS) $(CXXFLAGS) -c -o LightwaveConverter-Vector3.obj `if test -f 'Vector3.cpp'; then $(CYGPATH_W) 'Vector3.cpp'; else $(CYGPATH_W) '$(srcdir)/Vector3.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
